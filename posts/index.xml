<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on RENDER HARDER</title>
    <link>https://anderslanglands.github.io/posts/</link>
    <description>Recent content in Posts on RENDER HARDER</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://anderslanglands.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Simple GGX Implementation</title>
      <link>https://anderslanglands.github.io/posts/ggx/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://anderslanglands.github.io/posts/ggx/</guid>
      <description>&lt;p&gt;Every time I start a new renderer, I find myself having to piece together a GGX implementation from scratch. This normally involves re-reading &lt;a href=&#34;https://eheitzresearch.wordpress.com/research/&#34;&gt;whatever Eric Heitz has published lately&lt;/a&gt; as well as reference implementations like &lt;a href=&#34;https://pbr-book.org&#34;&gt;PBRT&lt;/a&gt;, &lt;a href=&#34;https://www.cycles-renderer.org/&#34;&gt;Cycles&lt;/a&gt; or &lt;a href=&#34;https://appleseedhq.net/&#34;&gt;Appleseed&lt;/a&gt;. The implementations in these renderers are always tied to their integrators and material systems in more or less complicated ways, where all I want is just a simple &lt;code&gt;sample()&lt;/code&gt;/&lt;code&gt;eval()&lt;/code&gt;/&lt;code&gt;pdf()&lt;/code&gt; triad.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>